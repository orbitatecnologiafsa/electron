// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")  
}

enum Role {
  USUARIO
  ADMIN
  MODERADOR
}

model User {
  id    Int     @default(autoincrement()) @id
  email String  @unique
  nome  String?
  cargo  Role    @default(USUARIO)
}

model Register {
  id                      Int       @default(autoincrement()) @id
  cpf_cnpj                String
  nomeRazao               String
  fantasia                String?
  rg_inscEstad            String
  inscEstad_inscMuni      String
  contato                 String?
  cep                     String
  logradouro              String
  numero                  String
  bairro                  String
  complemento             String?
  uf                      String
  municipio               String
  telefone                String?
  celular                 String?
  email                   String    @unique
  observacao              String?
  active                  Boolean
  
  client Client[]
  suplliers Suplliers[]
  transporters Transporters[]
  sellers       Sellers[]
} 

model Client {
  id          Int         @default(autoincrement()) @id
  revenda     Boolean
  register    Register    @relation(fields: [id], references: [id])
}

model Suplliers {
  id          Int         @default(autoincrement()) @id
  register    Register    @relation(fields: [id], references: [id])
}

model Transporters  {
  id          Int         @default(autoincrement()) @id
  veiculos    Vehicles[]
  register    Register    @relation(fields: [id], references: [id])
}

model Vehicles {
  id          Int         @default(autoincrement()) @id
  placa       String      
  uf          String
  antt        String
  transportadora    Transporters    @relation(fields: [id], references: [id])
}

model Sellers {
  id              Int         @default(autoincrement()) @id
  nasicmento      DateTime    @db.Date
  desconto        Float       @default(0.00)
  comissao        Float       @default(0.00)
  tipoComissao    TipoComissao
  baseCalculo     BaseCalculo
  register        Register    @relation(fields: [id], references: [id])
}

enum TipoComissao {
  parcelaRecebida
  totalVenda
}

enum BaseCalculo {
  totalLiquido
  totalBruto
  total
}